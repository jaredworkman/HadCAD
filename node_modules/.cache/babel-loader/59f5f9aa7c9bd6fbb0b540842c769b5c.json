{"remainingRequest":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/babel-loader/lib/index.js!/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/vuetify-loader/lib/loader.js!/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/src/views/Projects.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/src/views/Projects.vue","mtime":1547056073882},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/cache-loader/dist/cjs.js","mtime":1546620803624},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/babel-loader/lib/index.js","mtime":1546620794588},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/vuetify-loader/lib/loader.js","mtime":1546620811655},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/cache-loader/dist/cjs.js","mtime":1546620803624},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/vue-loader/lib/index.js","mtime":1546620804030}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\nimport Project from '@/components/Project.vue';\nexport default {\n  components: {\n    Project: Project\n  },\n  data: function data() {\n    return {};\n  },\n  methods: {\n    next: function next() {\n      var active = parseInt(this.active);\n      this.active = active < 2 ? active + 1 : 0;\n    },\n    addTimeRecord: function addTimeRecord(links) {\n      var uuidv4 = require('uuid/v4');\n\n      var id = uuidv4();\n      var description = this.description;\n      var time = this.min + this.hr * 60;\n      var d = new Date();\n      var date = d.getDate() + '/' + (d.getMonth() + 1) + '/' + d.getFullYear();\n      var userId = this.user.id;\n      var newSubmission = {\n        id: id,\n        description: description,\n        time: time,\n        userId: userId,\n        date: date,\n        links: links\n      };\n      this.$store.commit('createTimeSubmission', newSubmission);\n      this.updateProject();\n    },\n    createExpenseRecord: function createExpenseRecord(links) {\n      var uuidv4 = require('uuid/v4');\n\n      var id = uuidv4();\n      var description = this.description;\n      var cost = this.cost;\n      var userId = this.user.id;\n      var d = new Date();\n      var date = d.getDate + '/' + (d.getMonth() + 1) + '/' + d.getFullYear();\n      var newSubmission = {\n        id: id,\n        description: description,\n        cost: cost,\n        userId: userId,\n        date: date,\n        links: links\n      };\n      this.$store.commit('createExpenseSubmission', newSubmission);\n      this.updateProject();\n    },\n    createTask: function createTask() {\n      var d = new Date();\n      var name = this.name;\n      var id = name + '_' + this.taskName + '_' + (d.getMonth() + 1) + '_' + d.getFullYear();\n      var description = this.description;\n      var deadline = document.getElementById('deadline').value;\n      var estHours = this.estHours;\n      var status = this.status;\n      var tag = this.tag;\n      var list = {\n        name: name,\n        tag: tag\n      };\n      var timeSubmissions = [];\n      var expenseSubmissions = [];\n      var newTask = {\n        id: id,\n        name: name,\n        description: description,\n        deadline: deadline,\n        estHours: estHours,\n        status: status,\n        list: list,\n        timeSubmissions: timeSubmissions,\n        expenseSubmissions: expenseSubmissions\n      };\n      this.$store.commit('createTask', newTask);\n      this.updateProject();\n    },\n    addFile: function () {\n      var _addFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var links, s3, images, processImage, imagePromises;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                links = [];\n                s3 = new AWS.S3({\n                  apiVersion: '2006-03-01'\n                });\n                _context2.prev = 2;\n                images = document.querySelector('#images').files;\n\n                processImage = function processImage(files, valid) {\n                  var promise = Array.from(files).map(\n                  /*#__PURE__*/\n                  function () {\n                    var _ref = _asyncToGenerator(\n                    /*#__PURE__*/\n                    regeneratorRuntime.mark(function _callee(file) {\n                      var Key, imageParams;\n                      return regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              Key = 'hadcad'.concat(\"-\", 'job', \"-\", file.name);\n                              imageParams = {\n                                ACL: 'public-read',\n                                Bucket: 'hadcad-files',\n                                Key: Key,\n                                Body: file\n                              };\n                              console.log(imageParams);\n                              links.push('https://s3.amazonaws.com/' + 'hadcad-files' + '/' + Key);\n                              _context.next = 6;\n                              return s3.upload(imageParams).promise();\n\n                            case 6:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee, this);\n                    }));\n\n                    return function (_x) {\n                      return _ref.apply(this, arguments);\n                    };\n                  }());\n                  return promise;\n                };\n\n                imagePromises = processImage(images);\n                console.log(links);\n                _context2.prev = 7;\n                _context2.next = 10;\n                return Promise.all(imagePromises.concat(imagePromises));\n\n              case 10:\n                this.createTimeRecord(links);\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](7);\n                console.error(_context2.t0);\n\n              case 16:\n                _context2.next = 21;\n                break;\n\n              case 18:\n                _context2.prev = 18;\n                _context2.t1 = _context2[\"catch\"](2);\n                console.error(_context2.t1);\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 18], [7, 13]]);\n      }));\n\n      function addFile() {\n        return _addFile.apply(this, arguments);\n      }\n\n      return addFile;\n    }()\n  }\n};",{"version":3,"sources":["Projects.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div>\r\n\t<Project />\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Project from '@/components/Project.vue'\r\n\r\nexport default {\r\n\tcomponents: {\r\n\t\tProject\r\n\t},\r\n\tdata() {\r\n\t\treturn {\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tnext () {\r\n\t\t\tconst active = parseInt(this.active);\r\n\t\t\tthis.active = (active < 2 ? active + 1 : 0);\r\n\t\t},\r\n\t\taddTimeRecord(links){\r\n\t\t\tconst uuidv4 = require('uuid/v4');\r\n\t\t\tconst id = uuidv4();\r\n\t\t\tconst description = this.description;\r\n\t\t\tconst time = this.min + (this.hr * 60);\r\n\t\t\tconst d = new Date();\r\n\t\t\tconst date = d.getDate() + '/' + (d.getMonth() + 1) + '/' + d.getFullYear();\r\n\t\t\tconst userId = this.user.id;\r\n\t\t\tconst newSubmission = { id, description, time, userId, date, links};\r\n\t\t\tthis.$store.commit('createTimeSubmission', newSubmission);\r\n        \tthis.updateProject();\r\n\t\t},\r\n\t\tcreateExpenseRecord(links){\r\n\t\t\tconst uuidv4 = require('uuid/v4');\r\n\t\t\tconst id = uuidv4();\r\n\t\t\tconst description = this.description;\r\n\t\t\tconst cost = this.cost;\r\n\t\t\tconst userId = this.user.id;\r\n\t\t\tconst d = new Date();\r\n\t\t\tconst date = d.getDate + '/' + (d.getMonth() + 1) + '/' + d.getFullYear();\r\n\t\t\tconst newSubmission = { id, description, cost, userId, date, links};\r\n\t\t\tthis.$store.commit('createExpenseSubmission', newSubmission);\r\n\t\t\tthis.updateProject();\r\n\t\t},\r\n\t\tcreateTask(){\r\n\t\t\tconst d = new Date();\r\n\t\t\tconst name = this.name;\r\n\t\t\tconst id = name + '_' +  this.taskName + '_' + (d.getMonth() + 1) + '_' + d.getFullYear();\r\n\t\t\tconst description = this.description;\r\n\t\t\tconst deadline = document.getElementById('deadline').value;\r\n\t\t\tconst estHours = this.estHours;\r\n\t\t\tconst status = this.status;\r\n\t\t\tconst tag = this.tag;\r\n\t\t\tconst list = {name, tag};\r\n\t\t\tconst timeSubmissions = [];\r\n\t\t\tconst expenseSubmissions = [];\r\n\t\t\tconst newTask = {id, name, description, deadline, estHours, status, list, timeSubmissions, expenseSubmissions};\r\n\t\t\tthis.$store.commit('createTask', newTask);\r\n\t\t\tthis.updateProject();\r\n\t\t},\r\n\t\tasync addFile(){\r\n\t\t\tlet links = [];\r\n\t\t\tconst s3 = new AWS.S3({ apiVersion: '2006-03-01' });\r\n\t\t\ttry {\r\n\t\t\tconst images = document.querySelector('#images').files;\r\n\t\t\tconst processImage = (files, valid) => {\r\n\t\t\t\tconst promise = Array.from(files).map(async (file) => {\r\n\t\t\t\tconst Key = `${'hadcad'}-${'job'}-${file.name}`;\r\n\t\r\n\t\t\t\tconst imageParams = {\r\n\t\t\t\t\tACL: 'public-read',\r\n\t\t\t\t\tBucket: 'hadcad-files',\r\n\t\t\t\t\tKey,\r\n\t\t\t\t\tBody: file,\r\n\t\t\t\t};\r\n\t\t\t\tconsole.log(imageParams);\r\n\t\t\t\tlinks.push('https://s3.amazonaws.com/' +  'hadcad-files' + '/' + Key);\r\n\t\t\t\tawait s3.upload(imageParams).promise();\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\treturn promise;\r\n          };\r\n  \r\n          const imagePromises = processImage(images);\r\n          console.log(links);\r\n  \r\n  \r\n          try {\r\n            await Promise.all(imagePromises.concat(imagePromises));\r\n            this.createTimeRecord(links)\r\n  \r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n\t}\r\n}\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views"}]}