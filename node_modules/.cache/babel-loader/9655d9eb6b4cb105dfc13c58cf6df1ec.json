{"remainingRequest":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/babel-loader/lib/index.js!/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/src/modules/loginController.js","dependencies":[{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/src/modules/loginController.js","mtime":1547137997773},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/cache-loader/dist/cjs.js","mtime":1546620803624},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/babel-loader/lib/index.js","mtime":1546620794588},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1546620798543}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar baseUrl = 'https://414qofs2j8.execute-api.us-east-1.amazonaws.com/dev/';\n\nfunction login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(email, password) {\n    var returnError, loginUser, res, returnName, returnEmail, returnSettings, returnGroups, returnProjects, _res;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            returnError = 'go';\n            _context.prev = 1;\n            loginUser = {\n              email: email,\n              password: password\n            };\n            _context.next = 5;\n            return fetch(\"\".concat(baseUrl, \"users/auth\"), {\n              method: 'POST',\n              body: JSON.stringify(loginUser)\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              returnError = data.body.error;\n            });\n\n          case 5:\n            res = _context.sent;\n\n            if (!(returnError != 'Not the correct password')) {\n              _context.next = 22;\n              break;\n            }\n\n            _context.prev = 7;\n            returnName = '';\n            returnEmail = '';\n            returnSettings = null;\n            returnGroups = [];\n            returnProjects = [];\n            _context.next = 15;\n            return fetch(\"\".concat(baseUrl, \"users/\").concat(email), {\n              method: 'GET'\n            }).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              returnEmail = data.body.userId;\n              returnName = data.body.name;\n              returnSettings = data.body.settings;\n              returnGroups = data.body.groups;\n              returnProjects = data.body.projects;\n            });\n\n          case 15:\n            _res = _context.sent;\n            return _context.abrupt(\"return\", {\n              returnName: returnName,\n              returnEmail: returnEmail,\n              returnSettings: returnSettings,\n              returnGroups: returnGroups,\n              returnProjects: returnProjects\n            });\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](7);\n            return _context.abrupt(\"return\");\n\n          case 22:\n            _context.next = 27;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t1 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\");\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[1, 24], [7, 19]]);\n  }));\n  return _login.apply(this, arguments);\n}\n\nfunction register(_x3, _x4, _x5, _x6, _x7, _x8) {\n  return _register.apply(this, arguments);\n}\n\nfunction _register() {\n  _register = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(email, password, settings, name, groups, projects) {\n    var userId, newUser, res;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            userId = email;\n            newUser = {\n              userId: userId,\n              name: name,\n              groups: groups,\n              projects: projects,\n              settings: settings,\n              password: password\n            };\n            _context2.next = 5;\n            return fetch(\"\".concat(baseUrl, \"users\"), {\n              method: 'POST',\n              body: JSON.stringify(newUser)\n            });\n\n          case 5:\n            res = _context2.sent;\n\n            if (res.ok) {\n              _context2.next = 10;\n              break;\n            }\n\n            throw new Error(\"HTTP \".concat(res.status, \" Error: \").concat(res.statusText));\n\n          case 10:\n            return _context2.abrupt(\"return\", true);\n\n          case 11:\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", 'error');\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this, [[0, 13]]);\n  }));\n  return _register.apply(this, arguments);\n}\n\nfunction updateUser(_x9) {\n  return _updateUser.apply(this, arguments);\n}\n\nfunction _updateUser() {\n  _updateUser = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(user) {\n    var userId, res;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('updainging user');\n            _context3.prev = 1;\n            console.log(user);\n            userId = user.id;\n            console.log(userId);\n            _context3.next = 7;\n            return fetch(\"\".concat(baseUrl, \"users/update/\").concat(userId), {\n              method: 'PUT',\n              body: JSON.stringify(user)\n            });\n\n          case 7:\n            res = _context3.sent;\n\n            if (res.ok) {\n              _context3.next = 10;\n              break;\n            }\n\n            throw new Error(\"HTTP \".concat(res.status, \" Error: \").concat(res.statusText));\n\n          case 10:\n            _context3.next = 15;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](1);\n            return _context3.abrupt(\"return\", 'error');\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, this, [[1, 12]]);\n  }));\n  return _updateUser.apply(this, arguments);\n}\n\nfunction updateUserGroup(_x10, _x11) {\n  return _updateUserGroup.apply(this, arguments);\n}\n\nfunction _updateUserGroup() {\n  _updateUserGroup = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(userId, groupId) {\n    var res;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log('updating group user');\n            _context4.prev = 1;\n            _context4.next = 4;\n            return fetch(\"\".concat(baseUrl, \"users/update/group/\").concat(userId), {\n              method: 'PUT',\n              body: JSON.stringify(groupId)\n            });\n\n          case 4:\n            res = _context4.sent;\n\n            if (res.ok) {\n              _context4.next = 7;\n              break;\n            }\n\n            throw new Error(\"HTTP \".concat(res.status, \" Error: \").concat(res.statusText));\n\n          case 7:\n            _context4.next = 12;\n            break;\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](1);\n            return _context4.abrupt(\"return\", 'error');\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, this, [[1, 9]]);\n  }));\n  return _updateUserGroup.apply(this, arguments);\n}\n\nexport { login, register, updateUser, updateUserGroup };",{"version":3,"sources":["/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/src/modules/loginController.js"],"names":["baseUrl","login","email","password","returnError","loginUser","fetch","method","body","JSON","stringify","then","response","json","data","error","res","returnName","returnEmail","returnSettings","returnGroups","returnProjects","userId","name","settings","groups","projects","register","newUser","ok","Error","status","statusText","updateUser","user","console","log","id","updateUserGroup","groupId"],"mappings":"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","sourcesContent":["var baseUrl = 'https://414qofs2j8.execute-api.us-east-1.amazonaws.com/dev/';\n\nasync function login(email, password) {\n        let returnError = 'go';\n        try{\n            const loginUser = { email, password }\n            const res = await fetch(`${baseUrl}users/auth`, {\n                  method: 'POST',\n                  body: JSON.stringify(loginUser)\n            }).then(function(response) {\n                    return response.json();\n                  }).then(function(data) {\n                    returnError = data.body.error;\n                  });\n            if(returnError != 'Not the correct password'){\n              try {\n                  let returnName = '';\n                  let returnEmail = '';\n                  let returnSettings = null;\n                  let returnGroups = [];\n                  let returnProjects = [];\n                  const res = await fetch(`${baseUrl}users/${email}`, {\n                    method: 'GET',\n                  }).then(function(response) {\n                    return response.json();\n                  }).then(function(data) {\n                    returnEmail = data.body.userId;\n                    returnName = data.body.name;\n                    returnSettings = data.body.settings;\n                    returnGroups = data.body.groups;\n                    returnProjects = data.body.projects;\n                  });\n                  return {returnName, returnEmail, returnSettings, returnGroups, returnProjects};\n\n                } catch (error) {\n                    return;\n                  }\n                }\n\n          }catch(error){\n                return;\n        }\n      }\nasync function register(email, password, settings, name, groups, projects)  {\n  try {\n        const userId = email;\n        const newUser = { userId, name, groups, projects, settings, password }\n        const res = await fetch(`${baseUrl}users`, {\n            method: 'POST',\n            body: JSON.stringify(newUser)\n          })\n          if (!res.ok) {\n            throw new Error(`HTTP ${res.status} Error: ${res.statusText}`)\n          }\n          else{\n            return true;\n          }\n      } catch (error) {\n        return 'error';\n       }\n}\nasync function updateUser(user){\n  console.log('updainging user');\n  try{\n    console.log(user);\n    const userId = user.id\n    console.log(userId);\n    const res = await fetch(`${baseUrl}users/update/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(user)\n    })\n    if(!res.ok){\n      throw new Error(`HTTP ${res.status} Error: ${res.statusText}`)\n    }\n\n  }catch(error){\n    return 'error';\n  }\n}\nasync function updateUserGroup(userId, groupId){\n  console.log('updating group user');\n  try{\n    const res = await fetch(`${baseUrl}users/update/group/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(groupId)\n    })\n    if(!res.ok){\n      throw new Error(`HTTP ${res.status} Error: ${res.statusText}`)\n    }\n\n  }catch(error){\n    return 'error';\n  }\n}\n  \nexport {login, register, updateUser, updateUserGroup};"]}]}