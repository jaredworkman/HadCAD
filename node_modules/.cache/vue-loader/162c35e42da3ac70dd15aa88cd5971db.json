{"remainingRequest":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/src/components/addGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/src/components/addGroup.vue","mtime":1547137035906},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/cache-loader/dist/cjs.js","mtime":1546620803624},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/babel-loader/lib/index.js","mtime":1546620794588},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/vuetify-loader/lib/loader.js","mtime":1546620811655},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/cache-loader/dist/cjs.js","mtime":1546620803624},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/vue-loader/lib/index.js","mtime":1546620804030}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {createGroup, getGroup, deleteGroup, updateGroup} from '../modules/groupController.js';\nimport {login, register, updateUser, updateUserGroup} from '../modules/loginController.js';\nimport {mapState} from 'vuex';\n\nexport default {\n  data() {\n\t\treturn {\n\t\t\tname: '',\n\t\t\tmembers: [],\n\t\t\towners: [],\n\t\t\tinputRules: [\n\t\t\t\tv => v.length >= 3 || 'Minimum length is 3 characters'\n\t\t\t],\n\t\t\tdialog: false,\n\t\t\tloading: false,\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tuser: 'user',\n\t\t})\n\t},\n\tmethods: {\n\t\tasync submit() {\n\t\t\tconst uuidv4 = require('uuid/v4');\n\t\t\tconst id = uuidv4();\n\t\t\tconst projects = [];\n\t\t\tconst owners = this.owners;\n\t\t\towners.push(this.user.id);\n\t\t\tconst members = this.members;\n\t\t\tconst name = this.name\n\t\t\tconst group = await createGroup(id, name, owners, projects, members);\n\t\t\tthis.$store.commit('createGroup', group);\n\t\t\tmembers.forEach(member => {\n\t\t\t\tupdateUserGroup(member, id);\n\t\t\t});\n\t\t\tthis.loading = true;\n\t\t\tthis.user.groups.push(id);\n\t\t\t//update each member of the group\n\t\t\tupdateUser(this.user);\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.dialog = false;\n\t\t\t\tthis.$emit('memberAdded');\n\t\t\t}, 1000)\n\t\t}\n\t}\n}\n",{"version":3,"sources":["addGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"addGroup.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<v-dialog max-width='600px' transition='dialog-transition' v-model='dialog'>\n\t\t<v-btn small flat slot='activator' class='tertiary--text'>\n\t\t\t<v-icon>add</v-icon>\n\t\t\t<span>Group</span>\n\t\t</v-btn>\n\t\t<v-card>\n\t\t\t<v-card-title>\n\t\t\t\t<h2 class='font-weight-light'>Add Group</h2>\n\t\t\t</v-card-title>\n\t\t\t<v-card-text>\n\t\t\t\t<v-form class='px-3' ref='form'>\n\t\t\t\t\t<v-text-field label='Name' v-model='name' prepend-icon='person'></v-text-field>\n\t\t\t\t\t<v-combobox\n\t\t\t\t\t\tlabel='Invite group members'\n\t\t\t\t\t\tv-model='members'\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tchips\n\t\t\t\t\t\tprepend-icon='people'\n\t\t\t\t\t></v-combobox>\n\t\t\t\t\t<v-combobox\n\t\t\t\t\t\tlabel='Invite other group owners'\n\t\t\t\t\t\tv-model='owners'\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tchips\n\t\t\t\t\t\tprepend-icon='person'\n\t\t\t\t\t></v-combobox>\n\t\t\t\t\t<v-spacer></v-spacer>\n\t\t\t\t\t<v-btn\n\t\t\t\t\t\tflat outline \n\t\t\t\t\t\tclass='primary mx-0 mt-3 primary--text' \n\t\t\t\t\t\t@click='submit'\n\t\t\t\t\t\t:loading='loading'\n\t\t\t\t\t>Submit</v-btn>\n\t\t\t\t</v-form>\n\t\t\t</v-card-text>\n\t\t</v-card>\n\t</v-dialog>\n</template>\n\n<script>\nimport {createGroup, getGroup, deleteGroup, updateGroup} from '../modules/groupController.js';\nimport {login, register, updateUser, updateUserGroup} from '../modules/loginController.js';\nimport {mapState} from 'vuex';\n\nexport default {\n  data() {\n\t\treturn {\n\t\t\tname: '',\n\t\t\tmembers: [],\n\t\t\towners: [],\n\t\t\tinputRules: [\n\t\t\t\tv => v.length >= 3 || 'Minimum length is 3 characters'\n\t\t\t],\n\t\t\tdialog: false,\n\t\t\tloading: false,\n\t\t}\n\t},\n\tcomputed: {\n\t\t...mapState({\n\t\t\tuser: 'user',\n\t\t})\n\t},\n\tmethods: {\n\t\tasync submit() {\n\t\t\tconst uuidv4 = require('uuid/v4');\n\t\t\tconst id = uuidv4();\n\t\t\tconst projects = [];\n\t\t\tconst owners = this.owners;\n\t\t\towners.push(this.user.id);\n\t\t\tconst members = this.members;\n\t\t\tconst name = this.name\n\t\t\tconst group = await createGroup(id, name, owners, projects, members);\n\t\t\tthis.$store.commit('createGroup', group);\n\t\t\tmembers.forEach(member => {\n\t\t\t\tupdateUserGroup(member, id);\n\t\t\t});\n\t\t\tthis.loading = true;\n\t\t\tthis.user.groups.push(id);\n\t\t\t//update each member of the group\n\t\t\tupdateUser(this.user);\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.dialog = false;\n\t\t\t\tthis.$emit('memberAdded');\n\t\t\t}, 1000)\n\t\t}\n\t}\n}\n</script>\n"]}]}