{"remainingRequest":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/src/views/Login.vue","mtime":1547057817493},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/cache-loader/dist/cjs.js","mtime":1546620803624},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/babel-loader/lib/index.js","mtime":1546620794588},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/vuetify-loader/lib/loader.js","mtime":1546620811655},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/cache-loader/dist/cjs.js","mtime":1546620803624},{"path":"/Users/jaredrussellworkman/Desktop/HADDY/caddyworkflow/node_modules/vue-loader/lib/index.js","mtime":1546620804030}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import { mapState } from 'vuex'\r\nimport {login, register} from '../modules/loginController.js';\r\nimport {createGroup, getGroup, deleteGroup, updateGroup} from '../modules/groupController.js';\r\nimport {createProject, getProject, updateProject, deleteProject} from '../modules/projectController.js';\r\nimport { mapState } from 'vuex';\r\n\r\n\r\nexport default {\r\n\tname: 'login',\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tshow1: false,\r\n\t\t\tshow2: false,\r\n\t\t\tsignUp: false,\r\n\t\t\tloading: false,\r\n\t\t\tinputRules: [\r\n\t\t\t\tv => v.length >= 3 || 'Error'\r\n\t\t\t],\r\n\t\t\troles: ['Employee', 'Client'],\r\n\t\t\tuserEmail: '',\r\n\t\t\tuserPassword: '',\r\n\t\t\tnewUserEmail: '',\r\n\t\t\tnewUserPassword: '',\r\n\t\t\tnewUserName: '',\r\n\t\t\tnewUserRole: null,\r\n\t\t\tsettings: {\r\n\t\t\t\tpermissions: [],\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapState({\r\n\t\t\tuser: 'user',\r\n\t\t\tgroups: 'group',\r\n\t\t\tprojects: 'projects',\r\n\t\t})\r\n  \t},\r\n\tmethods: {\r\n\t\tasync userSignIn() {\r\n\t\t\t//if (this.$refs.signIn.validate()) {\r\n\t\t\t\tthis.loading = true;\r\n\t\t\t\tconst res = await login(this.userEmail, this.userPassword);\r\n\t\t\t\tres.returnGroups.forEach(group => {\r\n\t\t\t\t\tthis.$store.commit('createGroup', group);\r\n\t\t\t\t});\r\n\t\t\t\tres.returnProjects.forEach(project => {\r\n\t\t\t\t\tthis.$store.commit('createProject', project);\r\n\t\t\t\t});\t\t\t\t\r\n\t\t\t\tthis.$store.commit('signInUser', res);\r\n\t\t\t\tthis.getAllInfo();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t\tthis.$router.push('Dashboard');\r\n\t\t\t}, 1500);\r\n\t\t\t//}\r\n\t\t},\r\n\t\tasync userSignUp() {\r\n\t\t\t//if (this.$refs.signIn.validate()) {\r\n\t\t\t\tthis.loading = true;\r\n\t\t\t\tlet groups = [];\r\n\t\t\t\tlet projects = [];\r\n\r\n\t\t\t\tconst res = await register(this.newUserEmail, this.newUserPassword, this.settings, this.newUserName, groups, projects);\r\n\t\t\t\tif(res){\r\n\t\t\t\t\tconst user = await login(this.newUserEmail, this.newUserPassword);\r\n\t\t\t\t\tthis.$store.commit('signInUser', user);\r\n\t\t\t\t\tuser.returnGroups.forEach(group => {\r\n\t\t\t\t\t\tthis.$store.commit('createGroup', group);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tuser.returnProjects.forEach(project => {\r\n\t\t\t\t\t\tthis.$store.commit('createProject', project);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.getAllInfo();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t\tthis.$router.push('Dashboard');\r\n\t\t\t}, 1500);\r\n\t\t\t//}\r\n\t\t},\r\n\t\tasync findProject(id) {\r\n\t\t\tconst project = await getProject(id);\r\n\t\t\tconsole.log('project:', project);\r\n\t\t\tthis.$store.commit('createProject', project);\r\n\t\t},\r\n\t\tasync findGroup(id) {\r\n\t\t\tconst group = await getGroup(id);\r\n\t\t\tconsole.log('group:', group);\r\n\t\t\tthis.$store.commit('createGroup', group);\r\n\t\t},\r\n\t\tgetAllInfo() {\r\n\t\t\tconsole.log(this.user);\r\n\t\t\tthis.user.projects.forEach(id => {\r\n\t\t\tthis.findProject(id);\r\n\t\t\t});\r\n\t\t\tthis.user.groups.forEach(id => {\r\n\t\t\tthis.findGroup(id);\r\n\t\t\t});\r\n\t\t},\r\n  },\r\n}\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n<div class='ma-5'>\r\n\t<v-card max-width='400px' class='mx-auto'>\r\n\t\t<v-layout column justify-center align-center>\r\n\t\t\t<v-flex>\r\n\t\t\t\t<v-card-title class='display-1 primary--text'>\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</v-card-title>\r\n\t\t\t</v-flex>\r\n\t\t\t<v-flex>\r\n\t\t\t\t<v-card-text>\r\n\t\t\t\t\t<v-form ref='signIn'>\r\n\t\t\t\t\t\t<v-text-field\r\n\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\tv-model='userEmail'\r\n\t\t\t\t\t\t\tprepend-icon='mail'\r\n\t\t\t\t\t\t\t:rules='inputRules'\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t></v-text-field>\r\n\t\t\t\t\t\t<v-text-field\r\n\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\tv-model='userPassword'\r\n\t\t\t\t\t\t\tprepend-icon='lock'\r\n\t\t\t\t\t\t\t:rules='inputRules'\r\n\t\t\t\t\t\t\t:type='show1 ? \"text\" : \"password\"'\r\n\t\t\t\t\t\t\t:append-icon=\"show1 ? 'visibility_off' : 'visibility'\"\r\n\t\t\t\t\t\t\t@click:append=\"show1 = !show1\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t></v-text-field>\r\n\t\t\t\t\t\t<v-btn\r\n\t\t\t\t\t\t\tblock flat outline\r\n\t\t\t\t\t\t\tclass='primary'\r\n\t\t\t\t\t\t\t@click='userSignIn'\r\n\t\t\t\t\t\t\t:loading='loading'\r\n\t\t\t\t\t\t\t>Submit</v-btn>\r\n\t\t\t\t\t</v-form>\r\n\t\t\t\t</v-card-text>\r\n\t\t\t</v-flex>\r\n\t\t</v-layout>\r\n\t</v-card>\r\n\r\n\t<v-card max-width='400px' class='mx-auto mt-4'>\r\n\t\t<v-card-text class='text-xs-center'>\r\n\t\t\tNew to Caddy? <a href='#' @click='signUp = true'>Sign Up!</a>\r\n\t\t</v-card-text>\r\n\t</v-card>\r\n\r\n\t<v-dialog max-width='400px' transition='dialog-transition' v-model='signUp'>\r\n\t\t<v-card>\r\n\t\t\t<v-layout column justify-center align-center>\r\n\t\t\t\t<v-flex>\r\n\t\t\t\t\t<v-card-title class='display-1 primary--text'>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</v-card-title>\r\n\t\t\t\t</v-flex>\r\n\t\t\t\t<v-flex>\r\n\t\t\t\t\t<v-card-text>\r\n\t\t\t\t\t\t<v-form ref='signUp'>\r\n\t\t\t\t\t\t\t<v-text-field\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tv-model='newUserName'\r\n\t\t\t\t\t\t\t\tprepend-icon='person'\r\n\t\t\t\t\t\t\t\t:rules='inputRules'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t></v-text-field>\r\n\t\t\t\t\t\t\t<v-text-field\r\n\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\tv-model='newUserEmail'\r\n\t\t\t\t\t\t\t\tprepend-icon='mail'\r\n\t\t\t\t\t\t\t\t:rules='inputRules'\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t></v-text-field>\r\n\t\t\t\t\t\t\t<v-text-field\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tv-model='newUserPassword'\r\n\t\t\t\t\t\t\t\tprepend-icon='lock'\r\n\t\t\t\t\t\t\t\t:rules='inputRules'\r\n\t\t\t\t\t\t\t\t:type='show1 ? \"text\" : \"password\"'\r\n\t\t\t\t\t\t\t\t:append-icon=\"show1 ? 'visibility_off' : 'visibility'\"\r\n\t\t\t\t\t\t\t\t@click:append=\"show1 = !show1\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t></v-text-field>\r\n\t\t\t\t\t\t\t<v-select\r\n\t\t\t\t\t\t\t\tlabel='Role'\r\n\t\t\t\t\t\t\t\tv-model='newUserRole'\r\n\t\t\t\t\t\t\t\t:items='roles'\r\n\t\t\t\t\t\t\t\tprepend-icon='work'\r\n\t\t\t\t\t\t\t\t:menu-props=\"{\r\n\t\t\t\t\t\t\t\t\toffsetY: '',\r\n\t\t\t\t\t\t\t\t\ttransition: 'slide-y-transition'\r\n\t\t\t\t\t\t\t\t}\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t></v-select>\r\n\t\t\t\t\t\t\t<v-btn\r\n\t\t\t\t\t\t\t\tblock flat outline\r\n\t\t\t\t\t\t\t\tclass='primary'\r\n\t\t\t\t\t\t\t\t@click='userSignUp'\r\n\t\t\t\t\t\t\t\t:loading='loading'\r\n\t\t\t\t\t\t\t\t>Submit</v-btn>\r\n\t\t\t\t\t\t</v-form>\r\n\t\t\t\t\t</v-card-text>\r\n\t\t\t\t</v-flex>\r\n\t\t\t</v-layout>\r\n\t\t</v-card>\r\n\t</v-dialog>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n// import { mapState } from 'vuex'\r\nimport {login, register} from '../modules/loginController.js';\r\nimport {createGroup, getGroup, deleteGroup, updateGroup} from '../modules/groupController.js';\r\nimport {createProject, getProject, updateProject, deleteProject} from '../modules/projectController.js';\r\nimport { mapState } from 'vuex';\r\n\r\n\r\nexport default {\r\n\tname: 'login',\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tshow1: false,\r\n\t\t\tshow2: false,\r\n\t\t\tsignUp: false,\r\n\t\t\tloading: false,\r\n\t\t\tinputRules: [\r\n\t\t\t\tv => v.length >= 3 || 'Error'\r\n\t\t\t],\r\n\t\t\troles: ['Employee', 'Client'],\r\n\t\t\tuserEmail: '',\r\n\t\t\tuserPassword: '',\r\n\t\t\tnewUserEmail: '',\r\n\t\t\tnewUserPassword: '',\r\n\t\t\tnewUserName: '',\r\n\t\t\tnewUserRole: null,\r\n\t\t\tsettings: {\r\n\t\t\t\tpermissions: [],\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\t...mapState({\r\n\t\t\tuser: 'user',\r\n\t\t\tgroups: 'group',\r\n\t\t\tprojects: 'projects',\r\n\t\t})\r\n  \t},\r\n\tmethods: {\r\n\t\tasync userSignIn() {\r\n\t\t\t//if (this.$refs.signIn.validate()) {\r\n\t\t\t\tthis.loading = true;\r\n\t\t\t\tconst res = await login(this.userEmail, this.userPassword);\r\n\t\t\t\tres.returnGroups.forEach(group => {\r\n\t\t\t\t\tthis.$store.commit('createGroup', group);\r\n\t\t\t\t});\r\n\t\t\t\tres.returnProjects.forEach(project => {\r\n\t\t\t\t\tthis.$store.commit('createProject', project);\r\n\t\t\t\t});\t\t\t\t\r\n\t\t\t\tthis.$store.commit('signInUser', res);\r\n\t\t\t\tthis.getAllInfo();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t\tthis.$router.push('Dashboard');\r\n\t\t\t}, 1500);\r\n\t\t\t//}\r\n\t\t},\r\n\t\tasync userSignUp() {\r\n\t\t\t//if (this.$refs.signIn.validate()) {\r\n\t\t\t\tthis.loading = true;\r\n\t\t\t\tlet groups = [];\r\n\t\t\t\tlet projects = [];\r\n\r\n\t\t\t\tconst res = await register(this.newUserEmail, this.newUserPassword, this.settings, this.newUserName, groups, projects);\r\n\t\t\t\tif(res){\r\n\t\t\t\t\tconst user = await login(this.newUserEmail, this.newUserPassword);\r\n\t\t\t\t\tthis.$store.commit('signInUser', user);\r\n\t\t\t\t\tuser.returnGroups.forEach(group => {\r\n\t\t\t\t\t\tthis.$store.commit('createGroup', group);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tuser.returnProjects.forEach(project => {\r\n\t\t\t\t\t\tthis.$store.commit('createProject', project);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.getAllInfo();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t\tthis.$router.push('Dashboard');\r\n\t\t\t}, 1500);\r\n\t\t\t//}\r\n\t\t},\r\n\t\tasync findProject(id) {\r\n\t\t\tconst project = await getProject(id);\r\n\t\t\tconsole.log('project:', project);\r\n\t\t\tthis.$store.commit('createProject', project);\r\n\t\t},\r\n\t\tasync findGroup(id) {\r\n\t\t\tconst group = await getGroup(id);\r\n\t\t\tconsole.log('group:', group);\r\n\t\t\tthis.$store.commit('createGroup', group);\r\n\t\t},\r\n\t\tgetAllInfo() {\r\n\t\t\tconsole.log(this.user);\r\n\t\t\tthis.user.projects.forEach(id => {\r\n\t\t\tthis.findProject(id);\r\n\t\t\t});\r\n\t\t\tthis.user.groups.forEach(id => {\r\n\t\t\tthis.findGroup(id);\r\n\t\t\t});\r\n\t\t},\r\n  },\r\n}\r\n</script>\r\n"]}]}